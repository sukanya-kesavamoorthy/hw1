1) logical and , logical or
Basically the logical operators are used to determine the logic between variables or values.
The logical operators mainly deals with boolean operators.
Logical AND:
this operators returns true if all expressions are true and returns false if any of the expression is false.
eg:
<p id="demo11"></p>
<script>
var x = 1;
var y = 1;

document.getElementById("demo11").innerHTML =
(x < 5 && y > 1);
</script>

Ans: false

eg:
<p id="demo12"></p>
<script>
var x = 2;
var y = 5;
var z = 1;

document.getElementById("demo12").innerHTML =
(x < 3 && y > 1 && z < 2);
</script>

Ans: true

Logical OR:
This operator returns false only if all the expressions are false and returns true if any of the expression is true.

eg:
<p id="demo13"></p>
<script>
var x = 6;
var y = 3;

document.getElementById("demo13").innerHTML =
(x < 10 || y == 1) 
</script>

Ans: True

<p id="demo14"></p>
<script>
var x = 6;
var y = 3;

document.getElementById("demo14").innerHTML =
(x ==4 || y == 1) 
</script>

Ans: False

References:
http://www.w3schools.com/js/js_comparisons.asp
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_Operators
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators
http://www.quirksmode.org/js/boolean.html
http://www.w3resource.com/javascript/operators/logical-operator.php


2) string methods (contact, split, ...)

Concat() method is used to concat two or more strings. i.e it is used to join the strings.

eg:
<p id= "eg"></p>
<script>
var string1 = "Iam";
var string2 = "sukanya";
document.getElementById("demo").innerHTML = string1.concat(" ", string2);
</script>

Split() method is used to split a string into substrings

eg:
<script>

    var str = "Hi this is sukanya.";
    document.write(str.split(" "));

</script>


charAt() method is used to find the character in the string at the specified position
eg:
<p id="demo1"></p>

<script>
var str = "sukanya";
document.getElementById("demo1").innerHTML = str.charAt(6);
</script>

charCodeAt() method returns the position of the character in the whole page when a specific position of the string is mentioned.

eg:
<p id="demo2"></p>

<script>
var str = "SUKANYA";
document.getElementById("demo2").innerHTML = str.charCodeAt(1);
</script>

toUpperCase() method and toLowerCase() method converts the string to upper case and lower case simultaneously.
eg:
<p id="demo3"></p>
<p id="demo4"></p>

<script>
var text="Sukanya"
    document.getElementById("demo3").innerHTML = text.toUpperCase();
    document.getElementById("demo4").innerHTML = text.toLowerCase();
</script>

replace() method replace a specified value with another value in a string.
eg:
<script>

    var str = "Hi this is sukanya";
document.write(str + "<br>");
document.write(str.replace("sukanya","sukku"));

</script>


indexof() method is used to find the position of the first occurence of specified value in the string.
eg:
<script>

    var str = "Hello this is sukanya. who is this .";
    
    document.write(str.indexOf("sukanya"));

</script>


lastIndexof() method is used to find the position of the last occurence of specified value in the string.
eg:
<script>

    var str = "Hello this is sukanya. who is this .";
    
    document.write(str.lastIndexOf("is"));

</script>

Reference:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String
https://www.tutorialspoint.com/javascript/javascript_strings_object.htm
http://www.w3schools.com/js/js_string_methods.asp
https://www.sitepoint.com/15-javascript-string-functions/
http://www.quirksmode.org/js/strings.html


3) array methods (push, pop, unshift, shift, slice, splice, indexOf, lastIndexOf, forEach, map, contact, reverse, join, ...)

push() and pop() methods are used to add and remove elements from the end of an array.
eg:
<p id="demo7"></p>
<p id="demo8"></p>.
<script>
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo7").innerHTML = fruits.pop();
document.getElementById("demo7").innerHTML = fruits;
document.getElementById("demo8").innerHTML = fruits.push("Kiwi");
document.getElementById("demo8").innerHTML = fruits;

</script>


shift() and unshift() methods are opposite to push() and pop() methods. In these methods items are removed and added in the first position of the array.

eg:
<p id="demo9"></p>
<p id="demo10"></p>.
<script>
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo9").innerHTML = fruits.shift();
document.getElementById("demo9").innerHTML = fruits;
document.getElementById("demo10").innerHTML = fruits.unshift("Kiwi");
document.getElementById("demo10").innerHTML = fruits;

</script>

slice() method slices the piece of an array and makes it into a new array and it slices out at the specified position.

eg:
<p id="demo15"></p>

<script>
var fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
var fruits1 = fruits.slice(1,3);
document.getElementById("demo15").innerHTML = fruits + "<br>" + fruits1;
</script>


splice() method is used to add elements to an array at the specified position and also remove elements from the existing array at the specified position.
both addition and removing of elements can be done together by using splice() method.

<p id="demo16"></p>

<script>
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = 
fruits.splice(2, 0, "Lemon", "Kiwi");
   
document.getElementById("demo16").innerHTML = 
fruits;
</script>

indexOf() method is used to find the position of a value in an array. if there are multiple times the specified values then it returns the position of first occurence.
eg:
<p id="demo17"></p>

<script>

    var fruits = ["Banana", "Orange", "Apple", "Mango"];
    
    document.getElementById("demo17").innerHTML = fruits.indexOf("Orange");
</script>


lastIndexOf() method is opposite to indexOf() method. If there are multiple times the specified value then it returns the position of last occurence.

eg:
<p id="demo18"></p>

<script>

    var fruits = ["Banana", "Orange", "Apple", "Mango","Banana"];
    
    document.getElementById("demo18").innerHTML = fruits.lastIndexOf("Banana");
</script>


forEach() method 


map() method is used to create a new arry from the existing array by calling a function which applies on every element in an array.
 eg:
<script>
var numbers = [4, 9, 16, 25];
document.write(numbers.map(Math.sqrt));

</script>

concat() method is used to join more than two arrays. And the result would be join of all arrays
eg:
<script>

    var a = ["sukanya", "vini"];
    var b = ["kesavamoorthy", "renuka"];
    var children =document.write( a.concat(b));
   
</script>

reverse() method is nothing but reversing the order of the elemnts in an array. i.e the first elemnt becomes last and the last element becomes first.
eg:

<script>
var fruits = ["Banana", "Orange", "Apple", "Mango", "Kiwi"];
document.write(fruits.reverse());

</script>

join() method is used to join all the elements in an array to a string.
eg:
<script>

    var fruits = ["Banana", "Orange", "Apple", "Mango"];
    var x = fruits.join();
       document.write(x);
   
</script>




References:
http://www.w3schools.com/jsref/jsref_obj_array.asp
http://www.w3schools.com/js/js_array_methods.asp
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array
https://www.tutorialspoint.com/javascript/javascript_arrays_object.htm



